// Generated from /home/irmen/Projects/IL65/il65/antlr/il65.g4 by ANTLR 4.7
package il65.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class il65Lexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, T__53=54, T__54=55, T__55=56, T__56=57, T__57=58, T__58=59, 
		T__59=60, T__60=61, T__61=62, T__62=63, T__63=64, T__64=65, T__65=66, 
		T__66=67, T__67=68, T__68=69, T__69=70, T__70=71, T__71=72, T__72=73, 
		T__73=74, T__74=75, T__75=76, T__76=77, T__77=78, T__78=79, LINECOMMENT=80, 
		COMMENT=81, WS=82, EOL=83, NAME=84, DEC_INTEGER=85, HEX_INTEGER=86, BIN_INTEGER=87, 
		FLOAT_NUMBER=88, STRING=89, INLINEASMBLOCK=90;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", "T__56", 
		"T__57", "T__58", "T__59", "T__60", "T__61", "T__62", "T__63", "T__64", 
		"T__65", "T__66", "T__67", "T__68", "T__69", "T__70", "T__71", "T__72", 
		"T__73", "T__74", "T__75", "T__76", "T__77", "T__78", "LINECOMMENT", "COMMENT", 
		"WS", "EOL", "NAME", "DEC_INTEGER", "HEX_INTEGER", "BIN_INTEGER", "FLOAT_NUMBER", 
		"FNUMBER", "STRING_ESCAPE_SEQ", "STRING", "INLINEASMBLOCK"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'~'", "'{'", "'}'", "':'", "'goto'", "'%output'", "'%launcher'", 
		"'%zp'", "'%address'", "'%import'", "'%breakpoint'", "'%asminclude'", 
		"'%asmbinary'", "','", "'='", "'const'", "'memory'", "'byte'", "'word'", 
		"'float'", "'str'", "'str_p'", "'str_s'", "'str_ps'", "'['", "']'", "'+='", 
		"'-='", "'/='", "'*='", "'**='", "'<<='", "'>>='", "'<<@='", "'>>@='", 
		"'&='", "'|='", "'^='", "'++'", "'--'", "'('", "')'", "'+'", "'-'", "'**'", 
		"'*'", "'/'", "'%'", "'<<'", "'>>'", "'<<@'", "'>>@'", "'<'", "'>'", "'<='", 
		"'>='", "'=='", "'!='", "'&'", "'^'", "'|'", "'and'", "'or'", "'xor'", 
		"'not'", "'to'", "'.'", "'A'", "'X'", "'Y'", "'AX'", "'AY'", "'XY'", "'SC'", 
		"'SI'", "'SZ'", "'true'", "'false'", "'%asm'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, "LINECOMMENT", "COMMENT", 
		"WS", "EOL", "NAME", "DEC_INTEGER", "HEX_INTEGER", "BIN_INTEGER", "FLOAT_NUMBER", 
		"STRING", "INLINEASMBLOCK"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public il65Lexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "il65.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 90:
			STRING_action((RuleContext)_localctx, actionIndex);
			break;
		case 91:
			INLINEASMBLOCK_action((RuleContext)_localctx, actionIndex);
			break;
		}
	}
	private void STRING_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:

					// get rid of the enclosing quotes
					String s = getText();
					setText(s.substring(1, s.length() - 1));
				
			break;
		}
	}
	private void INLINEASMBLOCK_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1:

					// get rid of the enclosing double braces
					String s = getText();
					setText(s.substring(2, s.length() - 2));
				
			break;
		}
	}

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\\\u025c\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z\tZ\4[\t[\4\\\t\\\4]\t]\3\2\3\2\3\3\3"+
		"\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7"+
		"\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3"+
		"\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f"+
		"\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3"+
		"\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3"+
		"\16\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3"+
		"\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3"+
		"\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3"+
		"\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3"+
		"\31\3\32\3\32\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3"+
		"\37\3\37\3\37\3 \3 \3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3"+
		"$\3$\3$\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3"+
		"+\3+\3,\3,\3-\3-\3.\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\62\3\63"+
		"\3\63\3\63\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\66\3\66\3\67\3\67"+
		"\38\38\38\39\39\39\3:\3:\3:\3;\3;\3;\3<\3<\3=\3=\3>\3>\3?\3?\3?\3?\3@"+
		"\3@\3@\3A\3A\3A\3A\3B\3B\3B\3B\3C\3C\3C\3D\3D\3E\3E\3F\3F\3G\3G\3H\3H"+
		"\3H\3I\3I\3I\3J\3J\3J\3K\3K\3K\3L\3L\3L\3M\3M\3M\3N\3N\3N\3N\3N\3O\3O"+
		"\3O\3O\3O\3O\3P\3P\3P\3P\3P\3Q\3Q\7Q\u01f3\nQ\fQ\16Q\u01f6\13Q\3Q\3Q\3"+
		"Q\3Q\3R\3R\7R\u01fe\nR\fR\16R\u0201\13R\3R\3R\3S\3S\3S\3S\3T\6T\u020a"+
		"\nT\rT\16T\u020b\3U\3U\7U\u0210\nU\fU\16U\u0213\13U\3V\3V\3V\6V\u0218"+
		"\nV\rV\16V\u0219\5V\u021c\nV\3W\3W\6W\u0220\nW\rW\16W\u0221\3X\3X\6X\u0226"+
		"\nX\rX\16X\u0227\3Y\3Y\3Y\5Y\u022d\nY\3Y\5Y\u0230\nY\3Z\6Z\u0233\nZ\r"+
		"Z\16Z\u0234\3Z\3Z\6Z\u0239\nZ\rZ\16Z\u023a\5Z\u023d\nZ\3[\3[\3[\3[\5["+
		"\u0243\n[\3\\\3\\\3\\\7\\\u0248\n\\\f\\\16\\\u024b\13\\\3\\\3\\\3\\\3"+
		"]\3]\3]\3]\6]\u0254\n]\r]\16]\u0255\3]\3]\3]\3]\3]\3\u0255\2^\3\3\5\4"+
		"\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22"+
		"#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C"+
		"#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w"+
		"=y>{?}@\177A\u0081B\u0083C\u0085D\u0087E\u0089F\u008bG\u008dH\u008fI\u0091"+
		"J\u0093K\u0095L\u0097M\u0099N\u009bO\u009dP\u009fQ\u00a1R\u00a3S\u00a5"+
		"T\u00a7U\u00a9V\u00abW\u00adX\u00afY\u00b1Z\u00b3\2\u00b5\2\u00b7[\u00b9"+
		"\\\3\2\n\4\2\f\f\17\17\4\2\13\13\"\"\5\2C\\aac|\6\2\62;C\\aac|\5\2\62"+
		";CHch\4\2GGgg\4\2--//\6\2\f\f\16\17$$^^\2\u026a\2\3\3\2\2\2\2\5\3\2\2"+
		"\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21"+
		"\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2"+
		"\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3"+
		"\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3"+
		"\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3"+
		"\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2"+
		"\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2"+
		"Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3"+
		"\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2"+
		"\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2"+
		"\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3"+
		"\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2"+
		"\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099"+
		"\3\2\2\2\2\u009b\3\2\2\2\2\u009d\3\2\2\2\2\u009f\3\2\2\2\2\u00a1\3\2\2"+
		"\2\2\u00a3\3\2\2\2\2\u00a5\3\2\2\2\2\u00a7\3\2\2\2\2\u00a9\3\2\2\2\2\u00ab"+
		"\3\2\2\2\2\u00ad\3\2\2\2\2\u00af\3\2\2\2\2\u00b1\3\2\2\2\2\u00b7\3\2\2"+
		"\2\2\u00b9\3\2\2\2\3\u00bb\3\2\2\2\5\u00bd\3\2\2\2\7\u00bf\3\2\2\2\t\u00c1"+
		"\3\2\2\2\13\u00c3\3\2\2\2\r\u00c8\3\2\2\2\17\u00d0\3\2\2\2\21\u00da\3"+
		"\2\2\2\23\u00de\3\2\2\2\25\u00e7\3\2\2\2\27\u00ef\3\2\2\2\31\u00fb\3\2"+
		"\2\2\33\u0107\3\2\2\2\35\u0112\3\2\2\2\37\u0114\3\2\2\2!\u0116\3\2\2\2"+
		"#\u011c\3\2\2\2%\u0123\3\2\2\2\'\u0128\3\2\2\2)\u012d\3\2\2\2+\u0133\3"+
		"\2\2\2-\u0137\3\2\2\2/\u013d\3\2\2\2\61\u0143\3\2\2\2\63\u014a\3\2\2\2"+
		"\65\u014c\3\2\2\2\67\u014e\3\2\2\29\u0151\3\2\2\2;\u0154\3\2\2\2=\u0157"+
		"\3\2\2\2?\u015a\3\2\2\2A\u015e\3\2\2\2C\u0162\3\2\2\2E\u0166\3\2\2\2G"+
		"\u016b\3\2\2\2I\u0170\3\2\2\2K\u0173\3\2\2\2M\u0176\3\2\2\2O\u0179\3\2"+
		"\2\2Q\u017c\3\2\2\2S\u017f\3\2\2\2U\u0181\3\2\2\2W\u0183\3\2\2\2Y\u0185"+
		"\3\2\2\2[\u0187\3\2\2\2]\u018a\3\2\2\2_\u018c\3\2\2\2a\u018e\3\2\2\2c"+
		"\u0190\3\2\2\2e\u0193\3\2\2\2g\u0196\3\2\2\2i\u019a\3\2\2\2k\u019e\3\2"+
		"\2\2m\u01a0\3\2\2\2o\u01a2\3\2\2\2q\u01a5\3\2\2\2s\u01a8\3\2\2\2u\u01ab"+
		"\3\2\2\2w\u01ae\3\2\2\2y\u01b0\3\2\2\2{\u01b2\3\2\2\2}\u01b4\3\2\2\2\177"+
		"\u01b8\3\2\2\2\u0081\u01bb\3\2\2\2\u0083\u01bf\3\2\2\2\u0085\u01c3\3\2"+
		"\2\2\u0087\u01c6\3\2\2\2\u0089\u01c8\3\2\2\2\u008b\u01ca\3\2\2\2\u008d"+
		"\u01cc\3\2\2\2\u008f\u01ce\3\2\2\2\u0091\u01d1\3\2\2\2\u0093\u01d4\3\2"+
		"\2\2\u0095\u01d7\3\2\2\2\u0097\u01da\3\2\2\2\u0099\u01dd\3\2\2\2\u009b"+
		"\u01e0\3\2\2\2\u009d\u01e5\3\2\2\2\u009f\u01eb\3\2\2\2\u00a1\u01f0\3\2"+
		"\2\2\u00a3\u01fb\3\2\2\2\u00a5\u0204\3\2\2\2\u00a7\u0209\3\2\2\2\u00a9"+
		"\u020d\3\2\2\2\u00ab\u021b\3\2\2\2\u00ad\u021d\3\2\2\2\u00af\u0223\3\2"+
		"\2\2\u00b1\u0229\3\2\2\2\u00b3\u0232\3\2\2\2\u00b5\u0242\3\2\2\2\u00b7"+
		"\u0244\3\2\2\2\u00b9\u024f\3\2\2\2\u00bb\u00bc\7\u0080\2\2\u00bc\4\3\2"+
		"\2\2\u00bd\u00be\7}\2\2\u00be\6\3\2\2\2\u00bf\u00c0\7\177\2\2\u00c0\b"+
		"\3\2\2\2\u00c1\u00c2\7<\2\2\u00c2\n\3\2\2\2\u00c3\u00c4\7i\2\2\u00c4\u00c5"+
		"\7q\2\2\u00c5\u00c6\7v\2\2\u00c6\u00c7\7q\2\2\u00c7\f\3\2\2\2\u00c8\u00c9"+
		"\7\'\2\2\u00c9\u00ca\7q\2\2\u00ca\u00cb\7w\2\2\u00cb\u00cc\7v\2\2\u00cc"+
		"\u00cd\7r\2\2\u00cd\u00ce\7w\2\2\u00ce\u00cf\7v\2\2\u00cf\16\3\2\2\2\u00d0"+
		"\u00d1\7\'\2\2\u00d1\u00d2\7n\2\2\u00d2\u00d3\7c\2\2\u00d3\u00d4\7w\2"+
		"\2\u00d4\u00d5\7p\2\2\u00d5\u00d6\7e\2\2\u00d6\u00d7\7j\2\2\u00d7\u00d8"+
		"\7g\2\2\u00d8\u00d9\7t\2\2\u00d9\20\3\2\2\2\u00da\u00db\7\'\2\2\u00db"+
		"\u00dc\7|\2\2\u00dc\u00dd\7r\2\2\u00dd\22\3\2\2\2\u00de\u00df\7\'\2\2"+
		"\u00df\u00e0\7c\2\2\u00e0\u00e1\7f\2\2\u00e1\u00e2\7f\2\2\u00e2\u00e3"+
		"\7t\2\2\u00e3\u00e4\7g\2\2\u00e4\u00e5\7u\2\2\u00e5\u00e6\7u\2\2\u00e6"+
		"\24\3\2\2\2\u00e7\u00e8\7\'\2\2\u00e8\u00e9\7k\2\2\u00e9\u00ea\7o\2\2"+
		"\u00ea\u00eb\7r\2\2\u00eb\u00ec\7q\2\2\u00ec\u00ed\7t\2\2\u00ed\u00ee"+
		"\7v\2\2\u00ee\26\3\2\2\2\u00ef\u00f0\7\'\2\2\u00f0\u00f1\7d\2\2\u00f1"+
		"\u00f2\7t\2\2\u00f2\u00f3\7g\2\2\u00f3\u00f4\7c\2\2\u00f4\u00f5\7m\2\2"+
		"\u00f5\u00f6\7r\2\2\u00f6\u00f7\7q\2\2\u00f7\u00f8\7k\2\2\u00f8\u00f9"+
		"\7p\2\2\u00f9\u00fa\7v\2\2\u00fa\30\3\2\2\2\u00fb\u00fc\7\'\2\2\u00fc"+
		"\u00fd\7c\2\2\u00fd\u00fe\7u\2\2\u00fe\u00ff\7o\2\2\u00ff\u0100\7k\2\2"+
		"\u0100\u0101\7p\2\2\u0101\u0102\7e\2\2\u0102\u0103\7n\2\2\u0103\u0104"+
		"\7w\2\2\u0104\u0105\7f\2\2\u0105\u0106\7g\2\2\u0106\32\3\2\2\2\u0107\u0108"+
		"\7\'\2\2\u0108\u0109\7c\2\2\u0109\u010a\7u\2\2\u010a\u010b\7o\2\2\u010b"+
		"\u010c\7d\2\2\u010c\u010d\7k\2\2\u010d\u010e\7p\2\2\u010e\u010f\7c\2\2"+
		"\u010f\u0110\7t\2\2\u0110\u0111\7{\2\2\u0111\34\3\2\2\2\u0112\u0113\7"+
		".\2\2\u0113\36\3\2\2\2\u0114\u0115\7?\2\2\u0115 \3\2\2\2\u0116\u0117\7"+
		"e\2\2\u0117\u0118\7q\2\2\u0118\u0119\7p\2\2\u0119\u011a\7u\2\2\u011a\u011b"+
		"\7v\2\2\u011b\"\3\2\2\2\u011c\u011d\7o\2\2\u011d\u011e\7g\2\2\u011e\u011f"+
		"\7o\2\2\u011f\u0120\7q\2\2\u0120\u0121\7t\2\2\u0121\u0122\7{\2\2\u0122"+
		"$\3\2\2\2\u0123\u0124\7d\2\2\u0124\u0125\7{\2\2\u0125\u0126\7v\2\2\u0126"+
		"\u0127\7g\2\2\u0127&\3\2\2\2\u0128\u0129\7y\2\2\u0129\u012a\7q\2\2\u012a"+
		"\u012b\7t\2\2\u012b\u012c\7f\2\2\u012c(\3\2\2\2\u012d\u012e\7h\2\2\u012e"+
		"\u012f\7n\2\2\u012f\u0130\7q\2\2\u0130\u0131\7c\2\2\u0131\u0132\7v\2\2"+
		"\u0132*\3\2\2\2\u0133\u0134\7u\2\2\u0134\u0135\7v\2\2\u0135\u0136\7t\2"+
		"\2\u0136,\3\2\2\2\u0137\u0138\7u\2\2\u0138\u0139\7v\2\2\u0139\u013a\7"+
		"t\2\2\u013a\u013b\7a\2\2\u013b\u013c\7r\2\2\u013c.\3\2\2\2\u013d\u013e"+
		"\7u\2\2\u013e\u013f\7v\2\2\u013f\u0140\7t\2\2\u0140\u0141\7a\2\2\u0141"+
		"\u0142\7u\2\2\u0142\60\3\2\2\2\u0143\u0144\7u\2\2\u0144\u0145\7v\2\2\u0145"+
		"\u0146\7t\2\2\u0146\u0147\7a\2\2\u0147\u0148\7r\2\2\u0148\u0149\7u\2\2"+
		"\u0149\62\3\2\2\2\u014a\u014b\7]\2\2\u014b\64\3\2\2\2\u014c\u014d\7_\2"+
		"\2\u014d\66\3\2\2\2\u014e\u014f\7-\2\2\u014f\u0150\7?\2\2\u01508\3\2\2"+
		"\2\u0151\u0152\7/\2\2\u0152\u0153\7?\2\2\u0153:\3\2\2\2\u0154\u0155\7"+
		"\61\2\2\u0155\u0156\7?\2\2\u0156<\3\2\2\2\u0157\u0158\7,\2\2\u0158\u0159"+
		"\7?\2\2\u0159>\3\2\2\2\u015a\u015b\7,\2\2\u015b\u015c\7,\2\2\u015c\u015d"+
		"\7?\2\2\u015d@\3\2\2\2\u015e\u015f\7>\2\2\u015f\u0160\7>\2\2\u0160\u0161"+
		"\7?\2\2\u0161B\3\2\2\2\u0162\u0163\7@\2\2\u0163\u0164\7@\2\2\u0164\u0165"+
		"\7?\2\2\u0165D\3\2\2\2\u0166\u0167\7>\2\2\u0167\u0168\7>\2\2\u0168\u0169"+
		"\7B\2\2\u0169\u016a\7?\2\2\u016aF\3\2\2\2\u016b\u016c\7@\2\2\u016c\u016d"+
		"\7@\2\2\u016d\u016e\7B\2\2\u016e\u016f\7?\2\2\u016fH\3\2\2\2\u0170\u0171"+
		"\7(\2\2\u0171\u0172\7?\2\2\u0172J\3\2\2\2\u0173\u0174\7~\2\2\u0174\u0175"+
		"\7?\2\2\u0175L\3\2\2\2\u0176\u0177\7`\2\2\u0177\u0178\7?\2\2\u0178N\3"+
		"\2\2\2\u0179\u017a\7-\2\2\u017a\u017b\7-\2\2\u017bP\3\2\2\2\u017c\u017d"+
		"\7/\2\2\u017d\u017e\7/\2\2\u017eR\3\2\2\2\u017f\u0180\7*\2\2\u0180T\3"+
		"\2\2\2\u0181\u0182\7+\2\2\u0182V\3\2\2\2\u0183\u0184\7-\2\2\u0184X\3\2"+
		"\2\2\u0185\u0186\7/\2\2\u0186Z\3\2\2\2\u0187\u0188\7,\2\2\u0188\u0189"+
		"\7,\2\2\u0189\\\3\2\2\2\u018a\u018b\7,\2\2\u018b^\3\2\2\2\u018c\u018d"+
		"\7\61\2\2\u018d`\3\2\2\2\u018e\u018f\7\'\2\2\u018fb\3\2\2\2\u0190\u0191"+
		"\7>\2\2\u0191\u0192\7>\2\2\u0192d\3\2\2\2\u0193\u0194\7@\2\2\u0194\u0195"+
		"\7@\2\2\u0195f\3\2\2\2\u0196\u0197\7>\2\2\u0197\u0198\7>\2\2\u0198\u0199"+
		"\7B\2\2\u0199h\3\2\2\2\u019a\u019b\7@\2\2\u019b\u019c\7@\2\2\u019c\u019d"+
		"\7B\2\2\u019dj\3\2\2\2\u019e\u019f\7>\2\2\u019fl\3\2\2\2\u01a0\u01a1\7"+
		"@\2\2\u01a1n\3\2\2\2\u01a2\u01a3\7>\2\2\u01a3\u01a4\7?\2\2\u01a4p\3\2"+
		"\2\2\u01a5\u01a6\7@\2\2\u01a6\u01a7\7?\2\2\u01a7r\3\2\2\2\u01a8\u01a9"+
		"\7?\2\2\u01a9\u01aa\7?\2\2\u01aat\3\2\2\2\u01ab\u01ac\7#\2\2\u01ac\u01ad"+
		"\7?\2\2\u01adv\3\2\2\2\u01ae\u01af\7(\2\2\u01afx\3\2\2\2\u01b0\u01b1\7"+
		"`\2\2\u01b1z\3\2\2\2\u01b2\u01b3\7~\2\2\u01b3|\3\2\2\2\u01b4\u01b5\7c"+
		"\2\2\u01b5\u01b6\7p\2\2\u01b6\u01b7\7f\2\2\u01b7~\3\2\2\2\u01b8\u01b9"+
		"\7q\2\2\u01b9\u01ba\7t\2\2\u01ba\u0080\3\2\2\2\u01bb\u01bc\7z\2\2\u01bc"+
		"\u01bd\7q\2\2\u01bd\u01be\7t\2\2\u01be\u0082\3\2\2\2\u01bf\u01c0\7p\2"+
		"\2\u01c0\u01c1\7q\2\2\u01c1\u01c2\7v\2\2\u01c2\u0084\3\2\2\2\u01c3\u01c4"+
		"\7v\2\2\u01c4\u01c5\7q\2\2\u01c5\u0086\3\2\2\2\u01c6\u01c7\7\60\2\2\u01c7"+
		"\u0088\3\2\2\2\u01c8\u01c9\7C\2\2\u01c9\u008a\3\2\2\2\u01ca\u01cb\7Z\2"+
		"\2\u01cb\u008c\3\2\2\2\u01cc\u01cd\7[\2\2\u01cd\u008e\3\2\2\2\u01ce\u01cf"+
		"\7C\2\2\u01cf\u01d0\7Z\2\2\u01d0\u0090\3\2\2\2\u01d1\u01d2\7C\2\2\u01d2"+
		"\u01d3\7[\2\2\u01d3\u0092\3\2\2\2\u01d4\u01d5\7Z\2\2\u01d5\u01d6\7[\2"+
		"\2\u01d6\u0094\3\2\2\2\u01d7\u01d8\7U\2\2\u01d8\u01d9\7E\2\2\u01d9\u0096"+
		"\3\2\2\2\u01da\u01db\7U\2\2\u01db\u01dc\7K\2\2\u01dc\u0098\3\2\2\2\u01dd"+
		"\u01de\7U\2\2\u01de\u01df\7\\\2\2\u01df\u009a\3\2\2\2\u01e0\u01e1\7v\2"+
		"\2\u01e1\u01e2\7t\2\2\u01e2\u01e3\7w\2\2\u01e3\u01e4\7g\2\2\u01e4\u009c"+
		"\3\2\2\2\u01e5\u01e6\7h\2\2\u01e6\u01e7\7c\2\2\u01e7\u01e8\7n\2\2\u01e8"+
		"\u01e9\7u\2\2\u01e9\u01ea\7g\2\2\u01ea\u009e\3\2\2\2\u01eb\u01ec\7\'\2"+
		"\2\u01ec\u01ed\7c\2\2\u01ed\u01ee\7u\2\2\u01ee\u01ef\7o\2\2\u01ef\u00a0"+
		"\3\2\2\2\u01f0\u01f4\t\2\2\2\u01f1\u01f3\t\3\2\2\u01f2\u01f1\3\2\2\2\u01f3"+
		"\u01f6\3\2\2\2\u01f4\u01f2\3\2\2\2\u01f4\u01f5\3\2\2\2\u01f5\u01f7\3\2"+
		"\2\2\u01f6\u01f4\3\2\2\2\u01f7\u01f8\5\u00a3R\2\u01f8\u01f9\3\2\2\2\u01f9"+
		"\u01fa\bQ\2\2\u01fa\u00a2\3\2\2\2\u01fb\u01ff\7=\2\2\u01fc\u01fe\n\2\2"+
		"\2\u01fd\u01fc\3\2\2\2\u01fe\u0201\3\2\2\2\u01ff\u01fd\3\2\2\2\u01ff\u0200"+
		"\3\2\2\2\u0200\u0202\3\2\2\2\u0201\u01ff\3\2\2\2\u0202\u0203\bR\2\2\u0203"+
		"\u00a4\3\2\2\2\u0204\u0205\t\3\2\2\u0205\u0206\3\2\2\2\u0206\u0207\bS"+
		"\3\2\u0207\u00a6\3\2\2\2\u0208\u020a\t\2\2\2\u0209\u0208\3\2\2\2\u020a"+
		"\u020b\3\2\2\2\u020b\u0209\3\2\2\2\u020b\u020c\3\2\2\2\u020c\u00a8\3\2"+
		"\2\2\u020d\u0211\t\4\2\2\u020e\u0210\t\5\2\2\u020f\u020e\3\2\2\2\u0210"+
		"\u0213\3\2\2\2\u0211\u020f\3\2\2\2\u0211\u0212\3\2\2\2\u0212\u00aa\3\2"+
		"\2\2\u0213\u0211\3\2\2\2\u0214\u021c\4\62;\2\u0215\u0217\4\63;\2\u0216"+
		"\u0218\4\62;\2\u0217\u0216\3\2\2\2\u0218\u0219\3\2\2\2\u0219\u0217\3\2"+
		"\2\2\u0219\u021a\3\2\2\2\u021a\u021c\3\2\2\2\u021b\u0214\3\2\2\2\u021b"+
		"\u0215\3\2\2\2\u021c\u00ac\3\2\2\2\u021d\u021f\7&\2\2\u021e\u0220\t\6"+
		"\2\2\u021f\u021e\3\2\2\2\u0220\u0221\3\2\2\2\u0221\u021f\3\2\2\2\u0221"+
		"\u0222\3\2\2\2\u0222\u00ae\3\2\2\2\u0223\u0225\7\'\2\2\u0224\u0226\4\62"+
		"\63\2\u0225\u0224\3\2\2\2\u0226\u0227\3\2\2\2\u0227\u0225\3\2\2\2\u0227"+
		"\u0228\3\2\2\2\u0228\u00b0\3\2\2\2\u0229\u022f\5\u00b3Z\2\u022a\u022c"+
		"\t\7\2\2\u022b\u022d\t\b\2\2\u022c\u022b\3\2\2\2\u022c\u022d\3\2\2\2\u022d"+
		"\u022e\3\2\2\2\u022e\u0230\5\u00b3Z\2\u022f\u022a\3\2\2\2\u022f\u0230"+
		"\3\2\2\2\u0230\u00b2\3\2\2\2\u0231\u0233\4\62;\2\u0232\u0231\3\2\2\2\u0233"+
		"\u0234\3\2\2\2\u0234\u0232\3\2\2\2\u0234\u0235\3\2\2\2\u0235\u023c\3\2"+
		"\2\2\u0236\u0238\7\60\2\2\u0237\u0239\4\62;\2\u0238\u0237\3\2\2\2\u0239"+
		"\u023a\3\2\2\2\u023a\u0238\3\2\2\2\u023a\u023b\3\2\2\2\u023b\u023d\3\2"+
		"\2\2\u023c\u0236\3\2\2\2\u023c\u023d\3\2\2\2\u023d\u00b4\3\2\2\2\u023e"+
		"\u023f\7^\2\2\u023f\u0243\13\2\2\2\u0240\u0241\7^\2\2\u0241\u0243\5\u00a7"+
		"T\2\u0242\u023e\3\2\2\2\u0242\u0240\3\2\2\2\u0243\u00b6\3\2\2\2\u0244"+
		"\u0249\7$\2\2\u0245\u0248\5\u00b5[\2\u0246\u0248\n\t\2\2\u0247\u0245\3"+
		"\2\2\2\u0247\u0246\3\2\2\2\u0248\u024b\3\2\2\2\u0249\u0247\3\2\2\2\u0249"+
		"\u024a\3\2\2\2\u024a\u024c\3\2\2\2\u024b\u0249\3\2\2\2\u024c\u024d\7$"+
		"\2\2\u024d\u024e\b\\\4\2\u024e\u00b8\3\2\2\2\u024f\u0250\7}\2\2\u0250"+
		"\u0251\7}\2\2\u0251\u0253\3\2\2\2\u0252\u0254\13\2\2\2\u0253\u0252\3\2"+
		"\2\2\u0254\u0255\3\2\2\2\u0255\u0256\3\2\2\2\u0255\u0253\3\2\2\2\u0256"+
		"\u0257\3\2\2\2\u0257\u0258\7\177\2\2\u0258\u0259\7\177\2\2\u0259\u025a"+
		"\3\2\2\2\u025a\u025b\b]\5\2\u025b\u00ba\3\2\2\2\25\2\u01f4\u01ff\u020b"+
		"\u0211\u0219\u021b\u021f\u0221\u0227\u022c\u022f\u0234\u023a\u023c\u0242"+
		"\u0247\u0249\u0255\6\2\3\2\b\2\2\3\\\2\3]\3";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}