%output basic
%import c64lib


~ main {

	var     zp1_1   = 200
	var     zp1_2   = 200
	var .text zp_s1 = "hello\n"
	var .ptext zp_s2 = "goodbye\n"
	var .stext zp_s3 = "welcome\n"
	var .pstext zp_s4 = "go away\n"
	const .text ctext = "constant\n"

	var  .array(20)  arr1 = $ea
	var  .wordarray(20)  arr2 = $ea

start:
	%asm {

	lda  zp1_1
	jsr  c64scr.print_byte_decimal0
	inc  zp1_1
	lda  zp1_1
	jsr  c64scr.print_byte_decimal0
	inc  zp1_1
	lda  zp1_1
	jsr  c64scr.print_byte_decimal0
	inc  zp1_1
	lda  zp1_1
	jsr  c64scr.print_byte_decimal0
	inc  zp1_1

	;ldx     #<zp_s1
	;ldy     #>zp_s1
	;jsr     c64scr.print_string
	;ldx     #<zp_s2
	;ldy     #>zp_s2
	;jsr     c64scr.print_pstring

	;ldx     #<ctext
	;ldy     #>ctext
	;jsr     c64scr.print_string
	}
	return
}

