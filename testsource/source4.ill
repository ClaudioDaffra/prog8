output prg,sys  ; create a c-64 program with basic SYS to() launch it

	import "c64lib.ill"

 ~ main
{
	var .text greeting = "hello world!\r12345678 is a big number.\r"
	var .ptext p_greeting = "hello world!\r12345678 is a big number.\r"
	const .word BORDER = $d020

start
	c64util.print_pimmediate ! ()          ; this prints the pstring immediately following it
	asm {
		.ptext "hello-pimmediate!{cr}"
	}

	A = 19
	c64util.print_byte_decimal0 ! ()
	c64.CHROUT ! (13)
	A = 19
	c64util.print_byte_decimal ! ()
	c64.CHROUT ! (13)


	X = $01
	Y = $02
	c64util.print_word_decimal0 ! ()
	c64.CHROUT ! (13)
	X = $01
	Y = $02
	c64util.print_word_decimal ! ()
	c64.CHROUT ! (13)
	return

start2
	global2.make_screen_black()
	c64.CLEARSCR()
	XY = greeting
	c64util.print_string()
	XY = p_greeting
	c64util.print_pstring()
	A = 0
	c64util.print_byte_decimal()
	A = 0
	c64util.print_byte_hex()
	c64.CHROUT(13)
	c64util.print_byte_decimal()
	A = 13
	c64util.print_byte_hex()
	c64.CHROUT(13)
	A = 255
	c64util.print_byte_decimal()
	A = 254
	c64util.print_byte_hex()
	A = 129
	c64util.print_byte_hex()
	c64.CHROUT(13)

	c64.CHROUT(13)
	X = 1
	Y = 0
	c64util.print_word_decimal()
	c64.CHROUT(13)
	return


}

~ global2 {

make_screen_black
		c64.EXTCOL = c64.BGCOL0 = 0
		c64.COLOR = 3
		return

}